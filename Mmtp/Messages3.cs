// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mmtp {

  /// <summary>Holder for reflection information generated from messages3.proto</summary>
  public static partial class Messages3Reflection {

    #region Descriptor
    /// <summary>File descriptor for messages3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Messages3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9tZXNzYWdlczMucHJvdG8SBE1tdHAipwEKC01tdHBNZXNzYWdlEh4KB21z",
            "Z1R5cGUYASABKA4yDS5NbXRwLk1zZ1R5cGUSDAoEdXVpZBgCIAEoCRIwCg9w",
            "cm90b2NvbE1lc3NhZ2UYBCABKAsyFS5NbXRwLlByb3RvY29sTWVzc2FnZUgA",
            "EjAKD3Jlc3BvbnNlTWVzc2FnZRgFIAEoCzIVLk1tdHAuUmVzcG9uc2VNZXNz",
            "YWdlSABCBgoEYm9keSLhAQoPUmVzcG9uc2VNZXNzYWdlEhYKDnJlc3BvbnNl",
            "VG9VdWlkGAEgASgJEiQKCHJlc3BvbnNlGAIgASgOMhIuTW10cC5SZXNwb25z",
            "ZUVudW0SEgoKcmVhc29uVGV4dBgDIAEoCRIuCg9tZXNzYWdlTWV0YWRhdGEY",
            "BCADKAsyFS5NbXRwLk1lc3NhZ2VNZXRhZGF0YRI0ChJhcHBsaWNhdGlvbk1l",
            "c3NhZ2UYBSADKAsyGC5NbXRwLkFwcGxpY2F0aW9uTWVzc2FnZRIWCg5yZWNv",
            "bm5lY3RUb2tlbhgGIAEoCSJPCg9NZXNzYWdlTWV0YWRhdGESDAoEdXVpZBgB",
            "IAEoCRIuCgZoZWFkZXIYAiABKAsyHi5NbXRwLkFwcGxpY2F0aW9uTWVzc2Fn",
            "ZUhlYWRlciJlChJBcHBsaWNhdGlvbk1lc3NhZ2USLgoGaGVhZGVyGAEgASgL",
            "Mh4uTW10cC5BcHBsaWNhdGlvbk1lc3NhZ2VIZWFkZXISDAoEYm9keRgCIAEo",
            "DBIRCglzaWduYXR1cmUYAyABKAkiIAoKUmVjaXBpZW50cxISCgpyZWNpcGll",
            "bnRzGAEgAygJIroBChhBcHBsaWNhdGlvbk1lc3NhZ2VIZWFkZXISEQoHc3Vi",
            "amVjdBgBIAEoCUgAEiYKCnJlY2lwaWVudHMYAiABKAsyEC5NbXRwLlJlY2lw",
            "aWVudHNIABIPCgdleHBpcmVzGAMgASgDEg4KBnNlbmRlchgEIAEoCRISCgpx",
            "b3NQcm9maWxlGAUgASgJEhgKEGJvZHlTaXplTnVtQnl0ZXMYBiABKA1CFAoS",
            "U3ViamVjdE9yUmVjaXBpZW50IvQCCg9Qcm90b2NvbE1lc3NhZ2USMgoPcHJv",
            "dG9jb2xNc2dUeXBlGAEgASgOMhkuTW10cC5Qcm90b2NvbE1lc3NhZ2VUeXBl",
            "EisKEHN1YnNjcmliZU1lc3NhZ2UYAiABKAsyDy5NbXRwLlN1YnNjcmliZUgA",
            "Ei8KEnVuc3Vic2NyaWJlTWVzc2FnZRgDIAEoCzIRLk1tdHAuVW5zdWJzY3Jp",
            "YmVIABIhCgtzZW5kTWVzc2FnZRgEIAEoCzIKLk1tdHAuU2VuZEgAEicKDnJl",
            "Y2VpdmVNZXNzYWdlGAUgASgLMg0uTW10cC5SZWNlaXZlSAASIwoMZmV0Y2hN",
            "ZXNzYWdlGAYgASgLMgsuTW10cC5GZXRjaEgAEi0KEWRpc2Nvbm5lY3RNZXNz",
            "YWdlGAcgASgLMhAuTW10cC5EaXNjb25uZWN0SAASJwoOY29ubmVjdE1lc3Nh",
            "Z2UYCCABKAsyDS5NbXRwLkNvbm5lY3RIAEIGCgRib2R5IlMKCVN1YnNjcmli",
            "ZRIRCgdzdWJqZWN0GAEgASgJSAASGAoOZGlyZWN0TWVzc2FnZXMYAiABKAhI",
            "AEIZChdzdWJqZWN0T3JEaXJlY3RNZXNzYWdlcyJVCgtVbnN1YnNjcmliZRIR",
            "CgdzdWJqZWN0GAEgASgJSAASGAoOZGlyZWN0TWVzc2FnZXMYAiABKAhIAEIZ",
            "ChdzdWJqZWN0T3JEaXJlY3RNZXNzYWdlcyI8CgRTZW5kEjQKEmFwcGxpY2F0",
            "aW9uTWVzc2FnZRgBIAEoCzIYLk1tdHAuQXBwbGljYXRpb25NZXNzYWdlIicK",
            "B1JlY2VpdmUSHAoGZmlsdGVyGAEgASgLMgwuTW10cC5GaWx0ZXIiHgoGRmls",
            "dGVyEhQKDG1lc3NhZ2VVdWlkcxgBIAMoCSIHCgVGZXRjaCIMCgpEaXNjb25u",
            "ZWN0IjEKB0Nvbm5lY3QSDgoGb3duTXJuGAEgASgJEhYKDnJlY29ubmVjdFRv",
            "a2VuGAIgASgJKk4KB01zZ1R5cGUSFwoTVU5TUEVDSUZJRURfTUVTU0FHRRAA",
            "EhQKEFBST1RPQ09MX01FU1NBR0UQARIUChBSRURQT05TRV9NRVNTQUdFEAIq",
            "vAEKE1Byb3RvY29sTWVzc2FnZVR5cGUSDwoLVU5TUEVDSUZJRUQQABIVChFT",
            "VUJTQ1JJQkVfTUVTU0FHRRABEhYKElVOU1VCQ1JJQkVfTUVTU0FHRRACEhAK",
            "DFNFTkRfTUVTU0FHRRADEhMKD1JFQ0lFVkVfTUVTU0FHRRAEEhEKDUZFVENI",
            "X01FU1NBR0UQBRIWChJESVNDT05ORUNUX01FU1NBR0UQBhITCg9DT05ORUNU",
            "X01FU1NBR0UQByo9CgxSZXNwb25zZUVudW0SGAoUVU5TUEVDSUZJRURfUkVT",
            "UE9OU0UQABIICgRHT09EEAESCQoFRVJST1IQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mmtp.MsgType), typeof(global::Mmtp.ProtocolMessageType), typeof(global::Mmtp.ResponseEnum), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.MmtpMessage), global::Mmtp.MmtpMessage.Parser, new[]{ "MsgType", "Uuid", "ProtocolMessage", "ResponseMessage" }, new[]{ "Body" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.ResponseMessage), global::Mmtp.ResponseMessage.Parser, new[]{ "ResponseToUuid", "Response", "ReasonText", "MessageMetadata", "ApplicationMessage", "ReconnectToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.MessageMetadata), global::Mmtp.MessageMetadata.Parser, new[]{ "Uuid", "Header" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.ApplicationMessage), global::Mmtp.ApplicationMessage.Parser, new[]{ "Header", "Body", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Recipients), global::Mmtp.Recipients.Parser, new[]{ "Recipients_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.ApplicationMessageHeader), global::Mmtp.ApplicationMessageHeader.Parser, new[]{ "Subject", "Recipients", "Expires", "Sender", "QosProfile", "BodySizeNumBytes" }, new[]{ "SubjectOrRecipient" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.ProtocolMessage), global::Mmtp.ProtocolMessage.Parser, new[]{ "ProtocolMsgType", "SubscribeMessage", "UnsubscribeMessage", "SendMessage", "ReceiveMessage", "FetchMessage", "DisconnectMessage", "ConnectMessage" }, new[]{ "Body" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Subscribe), global::Mmtp.Subscribe.Parser, new[]{ "Subject", "DirectMessages" }, new[]{ "SubjectOrDirectMessages" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Unsubscribe), global::Mmtp.Unsubscribe.Parser, new[]{ "Subject", "DirectMessages" }, new[]{ "SubjectOrDirectMessages" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Send), global::Mmtp.Send.Parser, new[]{ "ApplicationMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Receive), global::Mmtp.Receive.Parser, new[]{ "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Filter), global::Mmtp.Filter.Parser, new[]{ "MessageUuids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Fetch), global::Mmtp.Fetch.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Disconnect), global::Mmtp.Disconnect.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mmtp.Connect), global::Mmtp.Connect.Parser, new[]{ "OwnMrn", "ReconnectToken" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgType {
    [pbr::OriginalName("UNSPECIFIED_MESSAGE")] UnspecifiedMessage = 0,
    [pbr::OriginalName("PROTOCOL_MESSAGE")] ProtocolMessage = 1,
    [pbr::OriginalName("REDPONSE_MESSAGE")] RedponseMessage = 2,
  }

  public enum ProtocolMessageType {
    [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("SUBSCRIBE_MESSAGE")] SubscribeMessage = 1,
    [pbr::OriginalName("UNSUBCRIBE_MESSAGE")] UnsubcribeMessage = 2,
    [pbr::OriginalName("SEND_MESSAGE")] SendMessage = 3,
    [pbr::OriginalName("RECIEVE_MESSAGE")] RecieveMessage = 4,
    [pbr::OriginalName("FETCH_MESSAGE")] FetchMessage = 5,
    [pbr::OriginalName("DISCONNECT_MESSAGE")] DisconnectMessage = 6,
    [pbr::OriginalName("CONNECT_MESSAGE")] ConnectMessage = 7,
  }

  public enum ResponseEnum {
    [pbr::OriginalName("UNSPECIFIED_RESPONSE")] UnspecifiedResponse = 0,
    [pbr::OriginalName("GOOD")] Good = 1,
    [pbr::OriginalName("ERROR")] Error = 2,
  }

  #endregion

  #region Messages
  public sealed partial class MmtpMessage : pb::IMessage<MmtpMessage> {
    private static readonly pb::MessageParser<MmtpMessage> _parser = new pb::MessageParser<MmtpMessage>(() => new MmtpMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MmtpMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MmtpMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MmtpMessage(MmtpMessage other) : this() {
      msgType_ = other.msgType_;
      uuid_ = other.uuid_;
      switch (other.BodyCase) {
        case BodyOneofCase.ProtocolMessage:
          ProtocolMessage = other.ProtocolMessage.Clone();
          break;
        case BodyOneofCase.ResponseMessage:
          ResponseMessage = other.ResponseMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MmtpMessage Clone() {
      return new MmtpMessage(this);
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::Mmtp.MsgType msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.MsgType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocolMessage" field.</summary>
    public const int ProtocolMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ProtocolMessage ProtocolMessage {
      get { return bodyCase_ == BodyOneofCase.ProtocolMessage ? (global::Mmtp.ProtocolMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ProtocolMessage;
      }
    }

    /// <summary>Field number for the "responseMessage" field.</summary>
    public const int ResponseMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ResponseMessage ResponseMessage {
      get { return bodyCase_ == BodyOneofCase.ResponseMessage ? (global::Mmtp.ResponseMessage) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ResponseMessage;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      ProtocolMessage = 4,
      ResponseMessage = 5,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MmtpMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MmtpMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Uuid != other.Uuid) return false;
      if (!object.Equals(ProtocolMessage, other.ProtocolMessage)) return false;
      if (!object.Equals(ResponseMessage, other.ResponseMessage)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ProtocolMessage) hash ^= ProtocolMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ResponseMessage) hash ^= ResponseMessage.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uuid);
      }
      if (bodyCase_ == BodyOneofCase.ProtocolMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(ProtocolMessage);
      }
      if (bodyCase_ == BodyOneofCase.ResponseMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (bodyCase_ == BodyOneofCase.ProtocolMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtocolMessage);
      }
      if (bodyCase_ == BodyOneofCase.ResponseMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MmtpMessage other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.ProtocolMessage:
          if (ProtocolMessage == null) {
            ProtocolMessage = new global::Mmtp.ProtocolMessage();
          }
          ProtocolMessage.MergeFrom(other.ProtocolMessage);
          break;
        case BodyOneofCase.ResponseMessage:
          if (ResponseMessage == null) {
            ResponseMessage = new global::Mmtp.ResponseMessage();
          }
          ResponseMessage.MergeFrom(other.ResponseMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgType_ = (global::Mmtp.MsgType) input.ReadEnum();
            break;
          }
          case 18: {
            Uuid = input.ReadString();
            break;
          }
          case 34: {
            global::Mmtp.ProtocolMessage subBuilder = new global::Mmtp.ProtocolMessage();
            if (bodyCase_ == BodyOneofCase.ProtocolMessage) {
              subBuilder.MergeFrom(ProtocolMessage);
            }
            input.ReadMessage(subBuilder);
            ProtocolMessage = subBuilder;
            break;
          }
          case 42: {
            global::Mmtp.ResponseMessage subBuilder = new global::Mmtp.ResponseMessage();
            if (bodyCase_ == BodyOneofCase.ResponseMessage) {
              subBuilder.MergeFrom(ResponseMessage);
            }
            input.ReadMessage(subBuilder);
            ResponseMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseMessage : pb::IMessage<ResponseMessage> {
    private static readonly pb::MessageParser<ResponseMessage> _parser = new pb::MessageParser<ResponseMessage>(() => new ResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMessage(ResponseMessage other) : this() {
      responseToUuid_ = other.responseToUuid_;
      response_ = other.response_;
      reasonText_ = other.reasonText_;
      messageMetadata_ = other.messageMetadata_.Clone();
      applicationMessage_ = other.applicationMessage_.Clone();
      reconnectToken_ = other.reconnectToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMessage Clone() {
      return new ResponseMessage(this);
    }

    /// <summary>Field number for the "responseToUuid" field.</summary>
    public const int ResponseToUuidFieldNumber = 1;
    private string responseToUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseToUuid {
      get { return responseToUuid_; }
      set {
        responseToUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private global::Mmtp.ResponseEnum response_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ResponseEnum Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "reasonText" field.</summary>
    public const int ReasonTextFieldNumber = 3;
    private string reasonText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReasonText {
      get { return reasonText_; }
      set {
        reasonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messageMetadata" field.</summary>
    public const int MessageMetadataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mmtp.MessageMetadata> _repeated_messageMetadata_codec
        = pb::FieldCodec.ForMessage(34, global::Mmtp.MessageMetadata.Parser);
    private readonly pbc::RepeatedField<global::Mmtp.MessageMetadata> messageMetadata_ = new pbc::RepeatedField<global::Mmtp.MessageMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mmtp.MessageMetadata> MessageMetadata {
      get { return messageMetadata_; }
    }

    /// <summary>Field number for the "applicationMessage" field.</summary>
    public const int ApplicationMessageFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Mmtp.ApplicationMessage> _repeated_applicationMessage_codec
        = pb::FieldCodec.ForMessage(42, global::Mmtp.ApplicationMessage.Parser);
    private readonly pbc::RepeatedField<global::Mmtp.ApplicationMessage> applicationMessage_ = new pbc::RepeatedField<global::Mmtp.ApplicationMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mmtp.ApplicationMessage> ApplicationMessage {
      get { return applicationMessage_; }
    }

    /// <summary>Field number for the "reconnectToken" field.</summary>
    public const int ReconnectTokenFieldNumber = 6;
    private string reconnectToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReconnectToken {
      get { return reconnectToken_; }
      set {
        reconnectToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseToUuid != other.ResponseToUuid) return false;
      if (Response != other.Response) return false;
      if (ReasonText != other.ReasonText) return false;
      if(!messageMetadata_.Equals(other.messageMetadata_)) return false;
      if(!applicationMessage_.Equals(other.applicationMessage_)) return false;
      if (ReconnectToken != other.ReconnectToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseToUuid.Length != 0) hash ^= ResponseToUuid.GetHashCode();
      if (Response != 0) hash ^= Response.GetHashCode();
      if (ReasonText.Length != 0) hash ^= ReasonText.GetHashCode();
      hash ^= messageMetadata_.GetHashCode();
      hash ^= applicationMessage_.GetHashCode();
      if (ReconnectToken.Length != 0) hash ^= ReconnectToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseToUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResponseToUuid);
      }
      if (Response != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Response);
      }
      if (ReasonText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReasonText);
      }
      messageMetadata_.WriteTo(output, _repeated_messageMetadata_codec);
      applicationMessage_.WriteTo(output, _repeated_applicationMessage_codec);
      if (ReconnectToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReconnectToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseToUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseToUuid);
      }
      if (Response != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (ReasonText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReasonText);
      }
      size += messageMetadata_.CalculateSize(_repeated_messageMetadata_codec);
      size += applicationMessage_.CalculateSize(_repeated_applicationMessage_codec);
      if (ReconnectToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReconnectToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.ResponseToUuid.Length != 0) {
        ResponseToUuid = other.ResponseToUuid;
      }
      if (other.Response != 0) {
        Response = other.Response;
      }
      if (other.ReasonText.Length != 0) {
        ReasonText = other.ReasonText;
      }
      messageMetadata_.Add(other.messageMetadata_);
      applicationMessage_.Add(other.applicationMessage_);
      if (other.ReconnectToken.Length != 0) {
        ReconnectToken = other.ReconnectToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResponseToUuid = input.ReadString();
            break;
          }
          case 16: {
            response_ = (global::Mmtp.ResponseEnum) input.ReadEnum();
            break;
          }
          case 26: {
            ReasonText = input.ReadString();
            break;
          }
          case 34: {
            messageMetadata_.AddEntriesFrom(input, _repeated_messageMetadata_codec);
            break;
          }
          case 42: {
            applicationMessage_.AddEntriesFrom(input, _repeated_applicationMessage_codec);
            break;
          }
          case 50: {
            ReconnectToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageMetadata : pb::IMessage<MessageMetadata> {
    private static readonly pb::MessageParser<MessageMetadata> _parser = new pb::MessageParser<MessageMetadata>(() => new MessageMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageMetadata(MessageMetadata other) : this() {
      uuid_ = other.uuid_;
      header_ = other.header_ != null ? other.header_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageMetadata Clone() {
      return new MessageMetadata(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 2;
    private global::Mmtp.ApplicationMessageHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ApplicationMessageHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (!object.Equals(Header, other.Header)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (header_ != null) hash ^= Header.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (header_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Header);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Mmtp.ApplicationMessageHeader();
        }
        Header.MergeFrom(other.Header);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            if (header_ == null) {
              header_ = new global::Mmtp.ApplicationMessageHeader();
            }
            input.ReadMessage(header_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationMessage : pb::IMessage<ApplicationMessage> {
    private static readonly pb::MessageParser<ApplicationMessage> _parser = new pb::MessageParser<ApplicationMessage>(() => new ApplicationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationMessage(ApplicationMessage other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      body_ = other.body_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationMessage Clone() {
      return new ApplicationMessage(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Mmtp.ApplicationMessageHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ApplicationMessageHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Body != other.Body) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Body);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationMessage other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Mmtp.ApplicationMessageHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Mmtp.ApplicationMessageHeader();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            Body = input.ReadBytes();
            break;
          }
          case 26: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Recipients : pb::IMessage<Recipients> {
    private static readonly pb::MessageParser<Recipients> _parser = new pb::MessageParser<Recipients>(() => new Recipients());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Recipients> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recipients() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recipients(Recipients other) : this() {
      recipients_ = other.recipients_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recipients Clone() {
      return new Recipients(this);
    }

    /// <summary>Field number for the "recipients" field.</summary>
    public const int Recipients_FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_recipients_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> recipients_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Recipients_ {
      get { return recipients_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Recipients);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Recipients other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!recipients_.Equals(other.recipients_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= recipients_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      recipients_.WriteTo(output, _repeated_recipients_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += recipients_.CalculateSize(_repeated_recipients_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Recipients other) {
      if (other == null) {
        return;
      }
      recipients_.Add(other.recipients_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            recipients_.AddEntriesFrom(input, _repeated_recipients_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationMessageHeader : pb::IMessage<ApplicationMessageHeader> {
    private static readonly pb::MessageParser<ApplicationMessageHeader> _parser = new pb::MessageParser<ApplicationMessageHeader>(() => new ApplicationMessageHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationMessageHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationMessageHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationMessageHeader(ApplicationMessageHeader other) : this() {
      expires_ = other.expires_;
      sender_ = other.sender_;
      qosProfile_ = other.qosProfile_;
      bodySizeNumBytes_ = other.bodySizeNumBytes_;
      switch (other.SubjectOrRecipientCase) {
        case SubjectOrRecipientOneofCase.Subject:
          Subject = other.Subject;
          break;
        case SubjectOrRecipientOneofCase.Recipients:
          Recipients = other.Recipients.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationMessageHeader Clone() {
      return new ApplicationMessageHeader(this);
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Subject ? (string) subjectOrRecipient_ : ""; }
      set {
        subjectOrRecipient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        subjectOrRecipientCase_ = SubjectOrRecipientOneofCase.Subject;
      }
    }

    /// <summary>Field number for the "recipients" field.</summary>
    public const int RecipientsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Recipients Recipients {
      get { return subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Recipients ? (global::Mmtp.Recipients) subjectOrRecipient_ : null; }
      set {
        subjectOrRecipient_ = value;
        subjectOrRecipientCase_ = value == null ? SubjectOrRecipientOneofCase.None : SubjectOrRecipientOneofCase.Recipients;
      }
    }

    /// <summary>Field number for the "expires" field.</summary>
    public const int ExpiresFieldNumber = 3;
    private long expires_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Expires {
      get { return expires_; }
      set {
        expires_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 4;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qosProfile" field.</summary>
    public const int QosProfileFieldNumber = 5;
    private string qosProfile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QosProfile {
      get { return qosProfile_; }
      set {
        qosProfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bodySizeNumBytes" field.</summary>
    public const int BodySizeNumBytesFieldNumber = 6;
    private uint bodySizeNumBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BodySizeNumBytes {
      get { return bodySizeNumBytes_; }
      set {
        bodySizeNumBytes_ = value;
      }
    }

    private object subjectOrRecipient_;
    /// <summary>Enum of possible cases for the "SubjectOrRecipient" oneof.</summary>
    public enum SubjectOrRecipientOneofCase {
      None = 0,
      Subject = 1,
      Recipients = 2,
    }
    private SubjectOrRecipientOneofCase subjectOrRecipientCase_ = SubjectOrRecipientOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubjectOrRecipientOneofCase SubjectOrRecipientCase {
      get { return subjectOrRecipientCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubjectOrRecipient() {
      subjectOrRecipientCase_ = SubjectOrRecipientOneofCase.None;
      subjectOrRecipient_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationMessageHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationMessageHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subject != other.Subject) return false;
      if (!object.Equals(Recipients, other.Recipients)) return false;
      if (Expires != other.Expires) return false;
      if (Sender != other.Sender) return false;
      if (QosProfile != other.QosProfile) return false;
      if (BodySizeNumBytes != other.BodySizeNumBytes) return false;
      if (SubjectOrRecipientCase != other.SubjectOrRecipientCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Subject) hash ^= Subject.GetHashCode();
      if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Recipients) hash ^= Recipients.GetHashCode();
      if (Expires != 0L) hash ^= Expires.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (QosProfile.Length != 0) hash ^= QosProfile.GetHashCode();
      if (BodySizeNumBytes != 0) hash ^= BodySizeNumBytes.GetHashCode();
      hash ^= (int) subjectOrRecipientCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Subject) {
        output.WriteRawTag(10);
        output.WriteString(Subject);
      }
      if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Recipients) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipients);
      }
      if (Expires != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Expires);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sender);
      }
      if (QosProfile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(QosProfile);
      }
      if (BodySizeNumBytes != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BodySizeNumBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Subject) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Recipients) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipients);
      }
      if (Expires != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expires);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (QosProfile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QosProfile);
      }
      if (BodySizeNumBytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BodySizeNumBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationMessageHeader other) {
      if (other == null) {
        return;
      }
      if (other.Expires != 0L) {
        Expires = other.Expires;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.QosProfile.Length != 0) {
        QosProfile = other.QosProfile;
      }
      if (other.BodySizeNumBytes != 0) {
        BodySizeNumBytes = other.BodySizeNumBytes;
      }
      switch (other.SubjectOrRecipientCase) {
        case SubjectOrRecipientOneofCase.Subject:
          Subject = other.Subject;
          break;
        case SubjectOrRecipientOneofCase.Recipients:
          if (Recipients == null) {
            Recipients = new global::Mmtp.Recipients();
          }
          Recipients.MergeFrom(other.Recipients);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subject = input.ReadString();
            break;
          }
          case 18: {
            global::Mmtp.Recipients subBuilder = new global::Mmtp.Recipients();
            if (subjectOrRecipientCase_ == SubjectOrRecipientOneofCase.Recipients) {
              subBuilder.MergeFrom(Recipients);
            }
            input.ReadMessage(subBuilder);
            Recipients = subBuilder;
            break;
          }
          case 24: {
            Expires = input.ReadInt64();
            break;
          }
          case 34: {
            Sender = input.ReadString();
            break;
          }
          case 42: {
            QosProfile = input.ReadString();
            break;
          }
          case 48: {
            BodySizeNumBytes = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProtocolMessage : pb::IMessage<ProtocolMessage> {
    private static readonly pb::MessageParser<ProtocolMessage> _parser = new pb::MessageParser<ProtocolMessage>(() => new ProtocolMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtocolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtocolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtocolMessage(ProtocolMessage other) : this() {
      protocolMsgType_ = other.protocolMsgType_;
      switch (other.BodyCase) {
        case BodyOneofCase.SubscribeMessage:
          SubscribeMessage = other.SubscribeMessage.Clone();
          break;
        case BodyOneofCase.UnsubscribeMessage:
          UnsubscribeMessage = other.UnsubscribeMessage.Clone();
          break;
        case BodyOneofCase.SendMessage:
          SendMessage = other.SendMessage.Clone();
          break;
        case BodyOneofCase.ReceiveMessage:
          ReceiveMessage = other.ReceiveMessage.Clone();
          break;
        case BodyOneofCase.FetchMessage:
          FetchMessage = other.FetchMessage.Clone();
          break;
        case BodyOneofCase.DisconnectMessage:
          DisconnectMessage = other.DisconnectMessage.Clone();
          break;
        case BodyOneofCase.ConnectMessage:
          ConnectMessage = other.ConnectMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtocolMessage Clone() {
      return new ProtocolMessage(this);
    }

    /// <summary>Field number for the "protocolMsgType" field.</summary>
    public const int ProtocolMsgTypeFieldNumber = 1;
    private global::Mmtp.ProtocolMessageType protocolMsgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ProtocolMessageType ProtocolMsgType {
      get { return protocolMsgType_; }
      set {
        protocolMsgType_ = value;
      }
    }

    /// <summary>Field number for the "subscribeMessage" field.</summary>
    public const int SubscribeMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Subscribe SubscribeMessage {
      get { return bodyCase_ == BodyOneofCase.SubscribeMessage ? (global::Mmtp.Subscribe) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.SubscribeMessage;
      }
    }

    /// <summary>Field number for the "unsubscribeMessage" field.</summary>
    public const int UnsubscribeMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Unsubscribe UnsubscribeMessage {
      get { return bodyCase_ == BodyOneofCase.UnsubscribeMessage ? (global::Mmtp.Unsubscribe) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.UnsubscribeMessage;
      }
    }

    /// <summary>Field number for the "sendMessage" field.</summary>
    public const int SendMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Send SendMessage {
      get { return bodyCase_ == BodyOneofCase.SendMessage ? (global::Mmtp.Send) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.SendMessage;
      }
    }

    /// <summary>Field number for the "receiveMessage" field.</summary>
    public const int ReceiveMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Receive ReceiveMessage {
      get { return bodyCase_ == BodyOneofCase.ReceiveMessage ? (global::Mmtp.Receive) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ReceiveMessage;
      }
    }

    /// <summary>Field number for the "fetchMessage" field.</summary>
    public const int FetchMessageFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Fetch FetchMessage {
      get { return bodyCase_ == BodyOneofCase.FetchMessage ? (global::Mmtp.Fetch) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.FetchMessage;
      }
    }

    /// <summary>Field number for the "disconnectMessage" field.</summary>
    public const int DisconnectMessageFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Disconnect DisconnectMessage {
      get { return bodyCase_ == BodyOneofCase.DisconnectMessage ? (global::Mmtp.Disconnect) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.DisconnectMessage;
      }
    }

    /// <summary>Field number for the "connectMessage" field.</summary>
    public const int ConnectMessageFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Connect ConnectMessage {
      get { return bodyCase_ == BodyOneofCase.ConnectMessage ? (global::Mmtp.Connect) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.ConnectMessage;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      SubscribeMessage = 2,
      UnsubscribeMessage = 3,
      SendMessage = 4,
      ReceiveMessage = 5,
      FetchMessage = 6,
      DisconnectMessage = 7,
      ConnectMessage = 8,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtocolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtocolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolMsgType != other.ProtocolMsgType) return false;
      if (!object.Equals(SubscribeMessage, other.SubscribeMessage)) return false;
      if (!object.Equals(UnsubscribeMessage, other.UnsubscribeMessage)) return false;
      if (!object.Equals(SendMessage, other.SendMessage)) return false;
      if (!object.Equals(ReceiveMessage, other.ReceiveMessage)) return false;
      if (!object.Equals(FetchMessage, other.FetchMessage)) return false;
      if (!object.Equals(DisconnectMessage, other.DisconnectMessage)) return false;
      if (!object.Equals(ConnectMessage, other.ConnectMessage)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolMsgType != 0) hash ^= ProtocolMsgType.GetHashCode();
      if (bodyCase_ == BodyOneofCase.SubscribeMessage) hash ^= SubscribeMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.UnsubscribeMessage) hash ^= UnsubscribeMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.SendMessage) hash ^= SendMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ReceiveMessage) hash ^= ReceiveMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.FetchMessage) hash ^= FetchMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.DisconnectMessage) hash ^= DisconnectMessage.GetHashCode();
      if (bodyCase_ == BodyOneofCase.ConnectMessage) hash ^= ConnectMessage.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolMsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ProtocolMsgType);
      }
      if (bodyCase_ == BodyOneofCase.SubscribeMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeMessage);
      }
      if (bodyCase_ == BodyOneofCase.UnsubscribeMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(UnsubscribeMessage);
      }
      if (bodyCase_ == BodyOneofCase.SendMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(SendMessage);
      }
      if (bodyCase_ == BodyOneofCase.ReceiveMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ReceiveMessage);
      }
      if (bodyCase_ == BodyOneofCase.FetchMessage) {
        output.WriteRawTag(50);
        output.WriteMessage(FetchMessage);
      }
      if (bodyCase_ == BodyOneofCase.DisconnectMessage) {
        output.WriteRawTag(58);
        output.WriteMessage(DisconnectMessage);
      }
      if (bodyCase_ == BodyOneofCase.ConnectMessage) {
        output.WriteRawTag(66);
        output.WriteMessage(ConnectMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolMsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtocolMsgType);
      }
      if (bodyCase_ == BodyOneofCase.SubscribeMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeMessage);
      }
      if (bodyCase_ == BodyOneofCase.UnsubscribeMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnsubscribeMessage);
      }
      if (bodyCase_ == BodyOneofCase.SendMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendMessage);
      }
      if (bodyCase_ == BodyOneofCase.ReceiveMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiveMessage);
      }
      if (bodyCase_ == BodyOneofCase.FetchMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FetchMessage);
      }
      if (bodyCase_ == BodyOneofCase.DisconnectMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisconnectMessage);
      }
      if (bodyCase_ == BodyOneofCase.ConnectMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtocolMessage other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolMsgType != 0) {
        ProtocolMsgType = other.ProtocolMsgType;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.SubscribeMessage:
          if (SubscribeMessage == null) {
            SubscribeMessage = new global::Mmtp.Subscribe();
          }
          SubscribeMessage.MergeFrom(other.SubscribeMessage);
          break;
        case BodyOneofCase.UnsubscribeMessage:
          if (UnsubscribeMessage == null) {
            UnsubscribeMessage = new global::Mmtp.Unsubscribe();
          }
          UnsubscribeMessage.MergeFrom(other.UnsubscribeMessage);
          break;
        case BodyOneofCase.SendMessage:
          if (SendMessage == null) {
            SendMessage = new global::Mmtp.Send();
          }
          SendMessage.MergeFrom(other.SendMessage);
          break;
        case BodyOneofCase.ReceiveMessage:
          if (ReceiveMessage == null) {
            ReceiveMessage = new global::Mmtp.Receive();
          }
          ReceiveMessage.MergeFrom(other.ReceiveMessage);
          break;
        case BodyOneofCase.FetchMessage:
          if (FetchMessage == null) {
            FetchMessage = new global::Mmtp.Fetch();
          }
          FetchMessage.MergeFrom(other.FetchMessage);
          break;
        case BodyOneofCase.DisconnectMessage:
          if (DisconnectMessage == null) {
            DisconnectMessage = new global::Mmtp.Disconnect();
          }
          DisconnectMessage.MergeFrom(other.DisconnectMessage);
          break;
        case BodyOneofCase.ConnectMessage:
          if (ConnectMessage == null) {
            ConnectMessage = new global::Mmtp.Connect();
          }
          ConnectMessage.MergeFrom(other.ConnectMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            protocolMsgType_ = (global::Mmtp.ProtocolMessageType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Mmtp.Subscribe subBuilder = new global::Mmtp.Subscribe();
            if (bodyCase_ == BodyOneofCase.SubscribeMessage) {
              subBuilder.MergeFrom(SubscribeMessage);
            }
            input.ReadMessage(subBuilder);
            SubscribeMessage = subBuilder;
            break;
          }
          case 26: {
            global::Mmtp.Unsubscribe subBuilder = new global::Mmtp.Unsubscribe();
            if (bodyCase_ == BodyOneofCase.UnsubscribeMessage) {
              subBuilder.MergeFrom(UnsubscribeMessage);
            }
            input.ReadMessage(subBuilder);
            UnsubscribeMessage = subBuilder;
            break;
          }
          case 34: {
            global::Mmtp.Send subBuilder = new global::Mmtp.Send();
            if (bodyCase_ == BodyOneofCase.SendMessage) {
              subBuilder.MergeFrom(SendMessage);
            }
            input.ReadMessage(subBuilder);
            SendMessage = subBuilder;
            break;
          }
          case 42: {
            global::Mmtp.Receive subBuilder = new global::Mmtp.Receive();
            if (bodyCase_ == BodyOneofCase.ReceiveMessage) {
              subBuilder.MergeFrom(ReceiveMessage);
            }
            input.ReadMessage(subBuilder);
            ReceiveMessage = subBuilder;
            break;
          }
          case 50: {
            global::Mmtp.Fetch subBuilder = new global::Mmtp.Fetch();
            if (bodyCase_ == BodyOneofCase.FetchMessage) {
              subBuilder.MergeFrom(FetchMessage);
            }
            input.ReadMessage(subBuilder);
            FetchMessage = subBuilder;
            break;
          }
          case 58: {
            global::Mmtp.Disconnect subBuilder = new global::Mmtp.Disconnect();
            if (bodyCase_ == BodyOneofCase.DisconnectMessage) {
              subBuilder.MergeFrom(DisconnectMessage);
            }
            input.ReadMessage(subBuilder);
            DisconnectMessage = subBuilder;
            break;
          }
          case 66: {
            global::Mmtp.Connect subBuilder = new global::Mmtp.Connect();
            if (bodyCase_ == BodyOneofCase.ConnectMessage) {
              subBuilder.MergeFrom(ConnectMessage);
            }
            input.ReadMessage(subBuilder);
            ConnectMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Subscribe : pb::IMessage<Subscribe> {
    private static readonly pb::MessageParser<Subscribe> _parser = new pb::MessageParser<Subscribe>(() => new Subscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe(Subscribe other) : this() {
      switch (other.SubjectOrDirectMessagesCase) {
        case SubjectOrDirectMessagesOneofCase.Subject:
          Subject = other.Subject;
          break;
        case SubjectOrDirectMessagesOneofCase.DirectMessages:
          DirectMessages = other.DirectMessages;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscribe Clone() {
      return new Subscribe(this);
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject ? (string) subjectOrDirectMessages_ : ""; }
      set {
        subjectOrDirectMessages_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.Subject;
      }
    }

    /// <summary>Field number for the "directMessages" field.</summary>
    public const int DirectMessagesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DirectMessages {
      get { return subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages ? (bool) subjectOrDirectMessages_ : false; }
      set {
        subjectOrDirectMessages_ = value;
        subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.DirectMessages;
      }
    }

    private object subjectOrDirectMessages_;
    /// <summary>Enum of possible cases for the "subjectOrDirectMessages" oneof.</summary>
    public enum SubjectOrDirectMessagesOneofCase {
      None = 0,
      Subject = 1,
      DirectMessages = 2,
    }
    private SubjectOrDirectMessagesOneofCase subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubjectOrDirectMessagesOneofCase SubjectOrDirectMessagesCase {
      get { return subjectOrDirectMessagesCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubjectOrDirectMessages() {
      subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.None;
      subjectOrDirectMessages_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subject != other.Subject) return false;
      if (DirectMessages != other.DirectMessages) return false;
      if (SubjectOrDirectMessagesCase != other.SubjectOrDirectMessagesCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject) hash ^= Subject.GetHashCode();
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages) hash ^= DirectMessages.GetHashCode();
      hash ^= (int) subjectOrDirectMessagesCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject) {
        output.WriteRawTag(10);
        output.WriteString(Subject);
      }
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages) {
        output.WriteRawTag(16);
        output.WriteBool(DirectMessages);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscribe other) {
      if (other == null) {
        return;
      }
      switch (other.SubjectOrDirectMessagesCase) {
        case SubjectOrDirectMessagesOneofCase.Subject:
          Subject = other.Subject;
          break;
        case SubjectOrDirectMessagesOneofCase.DirectMessages:
          DirectMessages = other.DirectMessages;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subject = input.ReadString();
            break;
          }
          case 16: {
            DirectMessages = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Unsubscribe : pb::IMessage<Unsubscribe> {
    private static readonly pb::MessageParser<Unsubscribe> _parser = new pb::MessageParser<Unsubscribe>(() => new Unsubscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unsubscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsubscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsubscribe(Unsubscribe other) : this() {
      switch (other.SubjectOrDirectMessagesCase) {
        case SubjectOrDirectMessagesOneofCase.Subject:
          Subject = other.Subject;
          break;
        case SubjectOrDirectMessagesOneofCase.DirectMessages:
          DirectMessages = other.DirectMessages;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsubscribe Clone() {
      return new Unsubscribe(this);
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject ? (string) subjectOrDirectMessages_ : ""; }
      set {
        subjectOrDirectMessages_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.Subject;
      }
    }

    /// <summary>Field number for the "directMessages" field.</summary>
    public const int DirectMessagesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DirectMessages {
      get { return subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages ? (bool) subjectOrDirectMessages_ : false; }
      set {
        subjectOrDirectMessages_ = value;
        subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.DirectMessages;
      }
    }

    private object subjectOrDirectMessages_;
    /// <summary>Enum of possible cases for the "subjectOrDirectMessages" oneof.</summary>
    public enum SubjectOrDirectMessagesOneofCase {
      None = 0,
      Subject = 1,
      DirectMessages = 2,
    }
    private SubjectOrDirectMessagesOneofCase subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubjectOrDirectMessagesOneofCase SubjectOrDirectMessagesCase {
      get { return subjectOrDirectMessagesCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubjectOrDirectMessages() {
      subjectOrDirectMessagesCase_ = SubjectOrDirectMessagesOneofCase.None;
      subjectOrDirectMessages_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unsubscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unsubscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subject != other.Subject) return false;
      if (DirectMessages != other.DirectMessages) return false;
      if (SubjectOrDirectMessagesCase != other.SubjectOrDirectMessagesCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject) hash ^= Subject.GetHashCode();
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages) hash ^= DirectMessages.GetHashCode();
      hash ^= (int) subjectOrDirectMessagesCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject) {
        output.WriteRawTag(10);
        output.WriteString(Subject);
      }
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages) {
        output.WriteRawTag(16);
        output.WriteBool(DirectMessages);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.Subject) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (subjectOrDirectMessagesCase_ == SubjectOrDirectMessagesOneofCase.DirectMessages) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unsubscribe other) {
      if (other == null) {
        return;
      }
      switch (other.SubjectOrDirectMessagesCase) {
        case SubjectOrDirectMessagesOneofCase.Subject:
          Subject = other.Subject;
          break;
        case SubjectOrDirectMessagesOneofCase.DirectMessages:
          DirectMessages = other.DirectMessages;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subject = input.ReadString();
            break;
          }
          case 16: {
            DirectMessages = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Send : pb::IMessage<Send> {
    private static readonly pb::MessageParser<Send> _parser = new pb::MessageParser<Send>(() => new Send());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Send> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Send() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Send(Send other) : this() {
      applicationMessage_ = other.applicationMessage_ != null ? other.applicationMessage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Send Clone() {
      return new Send(this);
    }

    /// <summary>Field number for the "applicationMessage" field.</summary>
    public const int ApplicationMessageFieldNumber = 1;
    private global::Mmtp.ApplicationMessage applicationMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.ApplicationMessage ApplicationMessage {
      get { return applicationMessage_; }
      set {
        applicationMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Send);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Send other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ApplicationMessage, other.ApplicationMessage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (applicationMessage_ != null) hash ^= ApplicationMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (applicationMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ApplicationMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (applicationMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Send other) {
      if (other == null) {
        return;
      }
      if (other.applicationMessage_ != null) {
        if (applicationMessage_ == null) {
          applicationMessage_ = new global::Mmtp.ApplicationMessage();
        }
        ApplicationMessage.MergeFrom(other.ApplicationMessage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (applicationMessage_ == null) {
              applicationMessage_ = new global::Mmtp.ApplicationMessage();
            }
            input.ReadMessage(applicationMessage_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Receive : pb::IMessage<Receive> {
    private static readonly pb::MessageParser<Receive> _parser = new pb::MessageParser<Receive>(() => new Receive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Receive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Receive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Receive(Receive other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Receive Clone() {
      return new Receive(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::Mmtp.Filter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mmtp.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Receive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Receive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Receive other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Mmtp.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              filter_ = new global::Mmtp.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Filter : pb::IMessage<Filter> {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter(Filter other) : this() {
      messageUuids_ = other.messageUuids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "messageUuids" field.</summary>
    public const int MessageUuidsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_messageUuids_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> messageUuids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MessageUuids {
      get { return messageUuids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messageUuids_.Equals(other.messageUuids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messageUuids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messageUuids_.WriteTo(output, _repeated_messageUuids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messageUuids_.CalculateSize(_repeated_messageUuids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      messageUuids_.Add(other.messageUuids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messageUuids_.AddEntriesFrom(input, _repeated_messageUuids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Fetch : pb::IMessage<Fetch> {
    private static readonly pb::MessageParser<Fetch> _parser = new pb::MessageParser<Fetch>(() => new Fetch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fetch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fetch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fetch(Fetch other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fetch Clone() {
      return new Fetch(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fetch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fetch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fetch other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Disconnect : pb::IMessage<Disconnect> {
    private static readonly pb::MessageParser<Disconnect> _parser = new pb::MessageParser<Disconnect>(() => new Disconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Disconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnect(Disconnect other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnect Clone() {
      return new Disconnect(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Disconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Disconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Disconnect other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Connect : pb::IMessage<Connect> {
    private static readonly pb::MessageParser<Connect> _parser = new pb::MessageParser<Connect>(() => new Connect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mmtp.Messages3Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connect(Connect other) : this() {
      ownMrn_ = other.ownMrn_;
      reconnectToken_ = other.reconnectToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connect Clone() {
      return new Connect(this);
    }

    /// <summary>Field number for the "ownMrn" field.</summary>
    public const int OwnMrnFieldNumber = 1;
    private string ownMrn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnMrn {
      get { return ownMrn_; }
      set {
        ownMrn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reconnectToken" field.</summary>
    public const int ReconnectTokenFieldNumber = 2;
    private string reconnectToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReconnectToken {
      get { return reconnectToken_; }
      set {
        reconnectToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnMrn != other.OwnMrn) return false;
      if (ReconnectToken != other.ReconnectToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnMrn.Length != 0) hash ^= OwnMrn.GetHashCode();
      if (ReconnectToken.Length != 0) hash ^= ReconnectToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnMrn.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnMrn);
      }
      if (ReconnectToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReconnectToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnMrn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnMrn);
      }
      if (ReconnectToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReconnectToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connect other) {
      if (other == null) {
        return;
      }
      if (other.OwnMrn.Length != 0) {
        OwnMrn = other.OwnMrn;
      }
      if (other.ReconnectToken.Length != 0) {
        ReconnectToken = other.ReconnectToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnMrn = input.ReadString();
            break;
          }
          case 18: {
            ReconnectToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
